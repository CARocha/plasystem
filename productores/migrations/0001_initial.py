# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-20 15:39
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizaciones', '0001_initial'),
        ('lugar', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AreaFinca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.FloatField(help_text='Mz', verbose_name='\xc1rea')),
            ],
            options={
                'verbose_name': '9. \xc1rea total de propiedad/finca',
                'verbose_name_plural': '9. \xc1rea total de propiedad/finca',
            },
        ),
        migrations.CreateModel(
            name='Biodiversidad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diversidad_vegetal', models.IntegerField(choices=[(1, 'La diversidad de especies vegetales est\xe1 a un nivel \xf3ptimo'), (2, 'La diversidad vegetal debajo de una \xf3ptima con las medidas adoptadas'), (3, 'La diversidad de las especies vegetales a continuaci\xf3n \xf3ptima pero se toman medidas'), (4, 'Planta baja diversidad y ninguna de las medidas adoptadas')], verbose_name='23.1 Diversidad vegetal')),
                ('diversidad_genetica', models.IntegerField(choices=[(1, 'Sin el uso de Organismos gen\xe9ticamente modificados / Transg\xe9nicos. La diversidad gen\xe9tica est\xe1 aumentando'), (2, 'Sin el uso de Organismos gen\xe9ticamente modificados / Transg\xe9nicos. La diversidad gen\xe9tica en la granja se mantiene y se adopten medidas para incrementar la diversidad'), (3, 'Se toman medidas para reducir el uso de los Organismos gen\xe9ticamente modificados / Transg\xe9nicos. La diversidad gen\xe9tica en las explotaciones agr\xedcolas est\xe1 disminuyendo, pero se han tomado medidas'), (4, 'Uso intencional de Organismos gen\xe9ticamente modificados / Transg\xe9nicos. No se adoptan medidas para aumentar la diversidad gen\xe9tica')], verbose_name='23.2 Diversidad gen\xe9tica')),
                ('uso_tierra', models.IntegerField(choices=[(1, 'Ninguna destrucci\xf3n de ecosistemas de gran valor desde 2014 y la conversi\xf3n de ecosistemas naturales desde 2015'), (2, 'No hay ninguna conversi\xf3n de ecosistemas naturales desde 2015 y la compensaci\xf3n de las medidas adoptadas para la conversi\xf3n anterior'), (3, 'No hay ninguna conversi\xf3n de ecosistemas naturales desde 2015 y sin compensaci\xf3n de las medidas adoptadas'), (4, 'Conversi\xf3n de ecosistemas naturales desde 2015')], verbose_name='23.3 El uso de la tierra y la conversi\xf3n de la tierra')),
            ],
            options={
                'verbose_name_plural': '23. Biodiversidad',
            },
        ),
        migrations.CreateModel(
            name='BPA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('higiene_trabajadores', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Lavado de manos', 'Lavado de manos'), ('Dispone de letrina', 'Dispone de letrina'), ('Obreros no poseen enfermedades infecciosas', 'Obreros no poseen enfermedades infecciosas')], max_length=77, verbose_name='3. Higiene de los trabajadores')),
                ('sustancias_quimicas', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Bodega de plaguicidas e insumos', 'Bodega de plaguicidas e insumos'), ('\xc1rea de preparaci\xf3n y mezclado de plaguicidas', '\xc1rea de preparaci\xf3n y mezclado de plaguicidas'), ('Equipo protector para las personas que manipulan plaguicidas', 'Equipo protector para las personas que manipulan plaguicidas')], max_length=138, verbose_name='4. Uso correcto de sustancias qu\xedmicas en')),
                ('registro_rastreabilidad', models.BooleanField(verbose_name='Registro y Rastreabilidad')),
            ],
            options={
                'verbose_name': '11. \xbfSi tiene Buenas Pr\xe1cticas Agr\xedcolas (BPA), indique el tipo de pr\xe1cticas que implementa',
                'verbose_name_plural': '11. \xbfSi tiene Buenas Pr\xe1cticas Agr\xedcolas (BPA), indique el tipo de pr\xe1cticas que implementa',
            },
        ),
        migrations.CreateModel(
            name='CambioClimatico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emision_carbono', models.IntegerField(choices=[(1, 'Cero quema de materia org\xe1nica en las granjas'), (2, 'Evidencia de baja emisi\xf3n de carbono y se toman medidas'), (3, 'Altas y bajas emisiones de carbono, pero se han tomado medidas para mejorar'), (4, 'Alta y baja emisi\xf3n de carbono sin que se tomen medidas')], verbose_name='22.1 El carbono y el \xf3xido nitroso (N2O): emisi\xf3n de carbono +')),
                ('procesamiento_transporte', models.IntegerField(choices=[(1, 'Productos transformados llegar al mercado con una \xf3ptima eficiencia de combustible'), (2, 'Los productos alcanzan el mercado estimado con alta eficiencia de combustible'), (3, 'Los productos llegan con baja eficiencia de uso de combustible pero adoptan medidas'), (4, 'Los productos llegan baja eficiencia de uso combustible (por v\xeda a\xe9rea, ...) y no adoptan medidas')], verbose_name='22.2 Emisiones de Carbono: durante el procesamiento y transporte')),
            ],
            options={
                'verbose_name_plural': '22. Cambio Clim\xe1tico',
            },
        ),
        migrations.CreateModel(
            name='Certificacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificacion', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=5)),
            ],
            options={
                'verbose_name': '10. \xbfLa propiedad/ finca tiene certificaci\xf3n?',
                'verbose_name_plural': '10. \xbfLa propiedad/ finca tiene certificaci\xf3n?',
            },
        ),
        migrations.CreateModel(
            name='Certificado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'Certificado que posee el productor',
                'verbose_name_plural': 'Certificados que posee el productor',
            },
        ),
        migrations.CreateModel(
            name='CertificadoEmpresa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificado', models.ManyToManyField(to='productores.Certificado')),
            ],
            options={
                'verbose_name': '10.2_En el caso SI, indique el tipo de certificaci\xf3n y nombre de la empresa',
                'verbose_name_plural': '10.2_En el caso SI, indique el tipo de certificaci\xf3n y nombre de la empresa',
            },
        ),
        migrations.CreateModel(
            name='CondicionesRiegos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sistema_riego', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=5, verbose_name='17. \xbfDispone de sistema de riego?')),
                ('estado_sistema_riego', models.CharField(blank=True, choices=[('Bueno', 'Bueno'), ('Regular', 'Regular'), ('Malo', 'Malo')], max_length=50, null=True, verbose_name='17.2 \xbfCual es el estado del sistema de riego?')),
                ('area_sistema_riego', models.FloatField(blank=True, null=True, verbose_name='17.3 \xbfCantidad de \xe1rea en mz  bajo sistema de riego?')),
                ('cosecha_agua', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=5, verbose_name='18 \xbfTiene cosecha de agua?')),
            ],
            options={
                'verbose_name_plural': 'Condiciones de riegos de la propiedad/finca',
            },
        ),
        migrations.CreateModel(
            name='ConservacionSuelo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('erosion', models.IntegerField(choices=[(1, 'Ninguna erosi\xf3n y ninguna compactaci\xf3n del suelo'), (2, 'Erosi\xf3n del suelo en peque\xf1a escala o compacto con medidas adoptadas'), (3, 'Erosi\xf3n del suelo a gran escala pero con medidas adoptadas'), (4, 'Erosi\xf3n del suelo a gran escala pero sin medidas')], verbose_name='19.1 Erosi\xf3n y/o compactaci\xf3n')),
                ('sanilizacion', models.IntegerField(choices=[(1, 'No hay historia de muy alto nivel de salinidad del suelo'), (2, 'Algunos casos de la salinidad del suelo, con las medidas adoptadas'), (3, 'Casos frecuentes de la salinidad del suelo, pero con medidas adoptadas'), (4, 'Casos frecuentes de la salinidad del suelo sin medidas adoptadas')], verbose_name='19.2 Salinizaci\xf3n')),
                ('contaminacion_suelo', models.IntegerField(choices=[(1, 'Niveles aceptables de contaminaci\xf3n (metales pesados, biol\xf3gicas) en el suelo sobre la base de datos de prueba de suelo'), (2, 'Pocos casos de contaminaci\xf3n adoptando medidas'), (3, 'Casos frecuentes de contaminaci\xf3n, sino adoptan medidas'), (4, 'Casos frecuentes de contaminaci\xf3n sin medidas')], verbose_name='19.3 Contaminaci\xf3n del suelo')),
                ('materia_organica', models.IntegerField(choices=[(1, 'Sin quema, acumulaci\xf3n de materia org\xe1nica del suelo'), (2, 'Pocos casos de quema, aumento de la materia org\xe1nica'), (3, 'Frecuentes casos de quema pero han adoptados medidas'), (4, 'Casos frecuentes de quema sin medidas adoptadas')], verbose_name='19.4 Materia org\xe1nica y el ciclo de nutrientes')),
            ],
            options={
                'verbose_name_plural': '19. Conservaci\xf3n de suelo',
            },
        ),
        migrations.CreateModel(
            name='Cultivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250)),
                ('unidad_medida', models.CharField(choices=[('Lb', 'Lb'), ('Unidades', 'Unidades'), ('Docena', 'Docena'), ('Quintal', 'Quintal')], max_length=50)),
                ('hortaliza', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Cultivo',
                'verbose_name_plural': 'Cultivos',
            },
        ),
        migrations.CreateModel(
            name='DestinoProduccion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cultivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Cultivo')),
            ],
            options={
                'verbose_name': 'Cultivo',
                'verbose_name_plural': '13. Por tipo de cultivo, seg\xfan la cantidad destinada la venta, indique cantidad vendida por tipo de mercado y precio(moneda local)',
            },
        ),
        migrations.CreateModel(
            name='DistribucionFinca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seleccion', models.CharField(choices=[('Bosque', 'Bosque'), ('Potrero', 'Potrero'), ('Cultivo anual', 'Cultivo anual'), ('Cultivo asociado', 'Cultivo asociado'), ('Plantaci\xf3n forestal', 'Plantaci\xf3n forestal'), ('Sistema agroforestal', 'Sistema agroforestal'), ('Sistema silvopastoril', 'Sistema silvopastoril')], max_length=50)),
                ('cantidad', models.FloatField()),
            ],
            options={
                'verbose_name': 'Distribuci\xf3n de la tierra',
                'verbose_name_plural': '9.1 Distribuci\xf3n de la tierra en la propiedad/finca en Mz',
            },
        ),
        migrations.CreateModel(
            name='DuenoNo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.CharField(choices=[('Arrendada', 'Arrendada'), ('Tierra Ind/comunal', 'Tierra Ind/comunal'), ('Promesa de venta', 'Promesa de venta'), ('Sin escritura', 'Sin escritura'), ('Prestada', 'Prestada'), ('Colectivo/Cooperativa', 'Colectivo/Cooperativa')], max_length=50)),
            ],
            options={
                'verbose_name': 'En el caso que diga NO, especifique la situaci\xf3n',
                'verbose_name_plural': 'En el caso que diga NO, especifique la situaci\xf3n',
            },
        ),
        migrations.CreateModel(
            name='DuenoPropiedad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respuesta', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=5)),
            ],
            options={
                'verbose_name': '8. \xbfEs due\xf1o de la propiedad/finca?',
                'verbose_name_plural': '8. \xbfEs due\xf1o de la propiedad/finca?',
            },
        ),
        migrations.CreateModel(
            name='DuenoSi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('si', models.CharField(choices=[('A nombre del hombre', 'A nombre del hombre'), ('A nombre de la mujer', 'A nombre de la mujer'), ('A nombre de los hijos', 'A nombre de los hijos'), ('Mancomunado', 'Mancomunado')], max_length=50)),
            ],
            options={
                'verbose_name': 'En el caso SI, indique a nombre de quien est\xe1',
                'verbose_name_plural': 'En el caso SI, indique a nombre de quien est\xe1',
            },
        ),
        migrations.CreateModel(
            name='EliminacionFocos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'Eliminaci\xf3n de focos de contaminaci\xf3n dentro y fuera del cultivo',
                'verbose_name_plural': 'Eliminaci\xf3n de focos de contaminaci\xf3n dentro y fuera del cultivo',
            },
        ),
        migrations.CreateModel(
            name='EmpresaCertifica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'Empresa que certifica al productor',
                'verbose_name_plural': 'Empresas que certifican al productor',
            },
        ),
        migrations.CreateModel(
            name='Encuesta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grupo', models.CharField(choices=[('Grupo de intervenci\xf3n', 'Grupo de intervenci\xf3n'), ('Grupo de control', 'Grupo de control')], max_length=50)),
                ('fecha', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Encuestador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'Encuestador',
                'verbose_name_plural': 'Encuestadores',
            },
        ),
        migrations.CreateModel(
            name='FuenteIngresos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuente_ingreso', models.CharField(choices=[('Asalariado', 'Asalariado'), ('Jornalero', 'Jornalero'), ('Alquiler', 'Alquiler'), ('Negocio propio', 'Negocio propio'), ('Remesas', 'Remesas'), ('Otros', 'Otros')], max_length=50)),
                ('cantidad_mensual', models.IntegerField(verbose_name='Cantidad total mensual (Moneda local)')),
                ('cantidad_veces', models.IntegerField(verbose_name='Cantidad de veces en el a\xf1o que recibe esta cantidad')),
                ('hombres', models.IntegerField(verbose_name='Cantidad de miembros hombres de la familia involucrados')),
                ('mujeres', models.IntegerField(verbose_name='Cantidad de miembros mujeres de la familia involucrados')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': 'Fuente de ingreso',
                'verbose_name_plural': '15.1. Si la respuesta es SI puede indicar la fuente',
            },
        ),
        migrations.CreateModel(
            name='GestionRecursosNaturales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pruebas_suelo', models.IntegerField(choices=[(1, 'El an\xe1lisis del suelo es realizado recientemente en terreno/Granja/FO nivel que sea homog\xe9neo'), (2, 'Se realiza el an\xe1lisis del suelo, pero los datos son mayores de 5 a\xf1os y no refleja las condiciones no homog\xe9neos'), (3, 'Los datos de an\xe1lisis de suelo no est\xe1 disponible pero se han tomado medidas para obtener datos de suelos'), (4, 'No se dispone de datos de pruebas del suelo y ninguna de las medidas adoptadas para obtener datos')], verbose_name='21.1 Pruebas del suelo')),
                ('manejo_nutrientes', models.IntegerField(choices=[(1, 'Manejo de nutrientes es altamente eficiente'), (2, 'Manejo de nutrientes es casi eficiente y toman medidas'), (3, 'Manejo de nutrientes es ineficiente, sino se toman medidas'), (4, 'Manejo de nutrientes es ineficaz sin las medidas adoptadas')], verbose_name='21.2 Manejo de nutrientes')),
                ('fertilizante_organico', models.IntegerField(choices=[(1, 'Se ha optimizado el uso de fertilizantes org\xe1nicos'), (2, 'El uso de fertilizantes org\xe1nicos es casi \xf3ptima con las medidas adoptadas'), (3, 'El uso de fertilizantes org\xe1nicos est\xe1 lejos de ser \xf3ptima con las medidas adoptadas'), (4, 'El uso de fertilizantes org\xe1nicos est\xe1 lejos de optimizar sin las medidas adoptadas')], verbose_name='21.3 Fertilizante org\xe1nico')),
                ('balance', models.IntegerField(choices=[(1, 'Balance de N y P en la granja se mantiene'), (2, 'N y P fuera de equilibrio con las medidas adoptadas'), (3, 'N y P gravemente desequilibrado, pero tomar contramedidas')], verbose_name='21.4 Balance de nitr\xf3geno y f\xf3sforo')),
                ('gestion_residuos', models.IntegerField(choices=[(1, 'Todos los pasos identificados han sido adoptados. No hay signos de botar o derrame'), (2, 'La gesti\xf3n de los residuos en el lugar con medidas tomadas para mejorar a\xfan m\xe1s'), (3, 'Sin la gesti\xf3n de los residuos , pero las medidas adoptadas'), (4, 'La gesti\xf3n de residuos y sin ning\xfan tipo de medidas')], verbose_name='21.5 Gesti\xf3n de los residuos de la producci\xf3n para procesar')),
                ('gestion_envases', models.IntegerField(choices=[(1, 'Agricultura org\xe1nica sin dejar residuos, tales como contenedores de nocivos en el medio ambiente'), (2, 'Aplicaci\xf3n de un sistema para recoger, devolver o la eliminaci\xf3n segura de los envases de agroqu\xedmicos'), (3, 'Sin gesti\xf3n de residuos agroqu\xedmicos, pero las medidas adoptadas'), (4, 'Sin gesti\xf3n de residuos de agroqu\xedmicos y sin medidas')], verbose_name='21.6 Gesti\xf3n de envases vac\xedos de agroqu\xedmicos y productos agroqu\xedmicos sobrantes')),
                ('uso_pesticida', models.IntegerField(choices=[(1, 'No se utilizan plaguicidas sint\xe9ticos'), (2, 'Se aplican los plaguicidas de baja toxicidad y minimizada en consonancia con las Buenas Pr\xe1cticas Agr\xedcolas (GAP) y el "2017 SAN'), (3, 'Gobierno nacional aprob\xf3 los plaguicidas se aplican seg\xfan sus instrucciones de seguridad'), (4, 'Alta toxicidad o pesticidas ilegales son utilizados en forma no segura')], verbose_name='21.7 Uso de pesticida')),
                ('mip', models.IntegerField(choices=[(1, 'MIP es la estrategia para el control de plagas'), (2, 'MIP est\xe1 parcialmente aplicada y control qu\xedmico se combina con al menos dos m\xe9todos m\xe1s'), (3, 'MIP no se aplica todav\xeda, pero el control qu\xedmico es combinada con al menos un m\xe9todo m\xe1s (biol\xf3gicas, fisicas)'), (4, 'El control de plagas se basa principalmente en el control qu\xedmico (pesticidas sint\xe9ticos)')], verbose_name='21.8 MIP/MPN (Manejo integrado y gesti\xf3n de plagas naturales)')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': '21. Gesti\xf3n de recursos naturales',
            },
        ),
        migrations.CreateModel(
            name='IngresosActividadesGanaderia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seleccion', models.CharField(choices=[('Ganader\xeda menor', 'Ganader\xeda menor'), ('Ganader\xeda mayor', 'Ganader\xeda mayor'), ('Procesamiento de productos agr\xedcolas', 'Procesamiento de productos agr\xedcolas')], max_length=50)),
                ('cantidad_mensual', models.IntegerField(verbose_name='Cantidad total mensual (Moneda local)')),
                ('cantidad_veces', models.IntegerField(verbose_name='Cantidad de veces en el a\xf1o que recibe esta cantidad')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': 'Fuente de ingreso',
                'verbose_name_plural': '16. Otros ingresos por actividades de ganader\xeda (mayor y menor) y procesamiento de productos agropecuarios',
            },
        ),
        migrations.CreateModel(
            name='IngresosFamilia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respuesta', models.IntegerField(choices=[('Si', 'Si'), ('No', 'No')])),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': '15. \xbfLa familia percibe otros ingresos diferentes a la actividad agr\xedcola?',
            },
        ),
        migrations.CreateModel(
            name='IngresosOtrosCultivos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingreso_anual', models.FloatField(verbose_name='Ingreso anual (moneda local)')),
                ('cultivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Cultivo')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': 'Cultivo',
                'verbose_name_plural': '14. \xbfIndique los ingresos totales por otros cultivos en la propiedad/finca?',
            },
        ),
        migrations.CreateModel(
            name='Mercado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mercado', models.CharField(choices=[('Mercado tradicional', 'Mercado tradicional'), ('Cooperativa', 'Cooperativa'), ('Ferias', 'Ferias'), ('Empresas procesadoras', 'Empresas procesadoras'), ('Empresas comercializadoras', 'Empresas comercializadoras'), ('Empresas exportadoras', 'Empresas exportadoras'), ('Supermercados', 'Supermercados'), ('Cadena de restaurantes', 'Cadena de restaurantes'), ('Intermediarios', 'Intermediarios')], max_length=50)),
                ('cantidad', models.FloatField()),
                ('precio', models.FloatField()),
                ('destino_produccion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.DestinoProduccion')),
            ],
        ),
        migrations.CreateModel(
            name='MiembrosFamilia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('miembros', models.CharField(choices=[('Hombres > 31 a\xf1os', 'Hombres > 31 a\xf1os'), ('Mujeres > 31 a\xf1os', 'Mujeres > 31 a\xf1os'), ('Ancianos > 64 a\xf1os', 'Ancianos > 64 a\xf1os'), ('Ancianas > 64 a\xf1os', 'Ancianas > 64 a\xf1os'), ('Mujer joven de 19 a 30 a\xf1os', 'Mujer joven de 19 a 30 a\xf1os'), ('Hombre joven de 19 a 30 a\xf1os', 'Hombre joven de 19 a 30 a\xf1os'), ('Mujer adolescente 13 a 18 a\xf1os', 'Mujer adolescente 13 a 18 a\xf1os'), ('Hombre adolescente 13 a 18 a\xf1os', 'Hombre adolescente 13 a 18 a\xf1os'), ('Ni\xf1as 5 a 12 a\xf1os', 'Ni\xf1as 5 a 12 a\xf1os'), ('Ni\xf1os 5 a 12 a\xf1os', 'Ni\xf1os 5 a 12 a\xf1os'), ('Ni\xf1as 0 a 4 a\xf1os', 'Ni\xf1as 0 a 4 a\xf1os'), ('Ni\xf1os 0 a 4 a\xf1os', 'Ni\xf1os 0 a 4 a\xf1os')], max_length=50)),
                ('cantidad', models.IntegerField()),
            ],
            options={
                'verbose_name': '7. Cantidad de miembros de la familia',
                'verbose_name_plural': '7. Cantidad de miembros de la familia',
            },
        ),
        migrations.CreateModel(
            name='PaisajeSostenible',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salvaguardar_ecosistemas', models.IntegerField(choices=[(1, 'Los ecosistemas naturales y sus valores de conectividad est\xe1n aumentando'), (2, 'Los ecosistemas naturales est\xe1n bien documentados y mantenidos. Las medidas adoptadas para mejorar el ecosistema de valores'), (3, 'Los ecosistemas naturales son mantenidas, pero ninguna de las medidas adoptadas para mejorar el ecosistema de valores'), (4, 'Los ecosistemas naturales y sus valores est\xe1n disminuyendo. Ninguna de las medidas adoptadas para mejorar el ecosistema de valores')], verbose_name='24.1 Salvaguardar los ecosistemas naturales + conectividad')),
                ('proteccion_vida_silvestre', models.IntegerField(choices=[(1, 'No hay caza de animales silvestres'), (2, 'Caza legal sostenible a tarifa regulada'), (3, 'Caza legal pero no reglamentada'), (4, 'La caza ilegal o la caza en el ritmo insostenible')], verbose_name='24.2 Protecci\xf3n de la vida silvestre')),
                ('tierras_agricolas', models.IntegerField(choices=[(1, 'Utilizaci\xf3n de las tierras agr\xedcolas est\xe1 en su \xf3ptimo definido localmente'), (2, 'Utilizaci\xf3n de tierras agr\xedcolas est\xe1 por debajo de su \xf3ptimo definido localmente con las medidas adoptadas'), (3, 'Utilizaci\xf3n de tierras agr\xedcolas est\xe1 por debajo de su \xf3ptimo definido localmente sin las medidas adoptadas'), (4, 'Tierras de cultivo no es apta para la agricultura')], verbose_name='24.3 Uso \xf3ptimo de las tierras agr\xedcolas')),
                ('especies_invasoras', models.IntegerField(choices=[(1, 'No existen especies invasoras'), (2, 'S\xed hay especies invasoras, los agricultores adoptar contramedidas para reprimirlos'), (3, 'Los agricultores no son conscientes de los riesgos de las especies invasoras'), (4, 'Los agricultores son conscientes de especies invasoras, pero sin tomar medidas para suprimir la proliferaci\xf3n de especies invasoras')], verbose_name='24.4 Especies invasoras')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': '24. Paisaje sostenible',
            },
        ),
        migrations.CreateModel(
            name='PracticasMIP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cultivo', models.CharField(choices=[('Cacao', 'Cacao'), ('Caf\xe9', 'Caf\xe9'), ('Hortalizas', 'Hortalizas')], max_length=50)),
                ('material_siembra_sano', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'Material de siembra de buena calidad(libre de plagas y enfermedades)'), (2, 'Uso de variedades tolerantes,variedades mejoradas o criolla seleccionada'), (3, 'Uso de pl\xe1ntulas de calidad (Libre de plagas y enfermedades, vigorosas)')], max_length=5, verbose_name='Material de siembra sano')),
                ('preparacion_terreno', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'Acciones correctivas al suelo (Incorporaci\xf3n de cal o materia org\xe1nica)'), (2, 'Preparaci\xf3n del terreno al menos 21 d\xedas antes de la siembra'), (3, 'Siembra con curvas a nivel o desnivel en terrenos con pendiente'), (4, 'Barreras vivas (Establecer Las 15-20 d\xedas antes de siembra o transplante)'), (5, 'Siembra en camas altas (mejor crecimiento radicular, absorci\xf3n)')], max_length=9, verbose_name='Preparaci\xf3n del Terreno')),
                ('control_malezas', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'Control o pre germinaci\xf3n de malezas (15 d\xedas antes de la siembra o transplante)'), (2, 'Manejo de rondas')], max_length=3, verbose_name='Control de malezas')),
                ('fertilizacion_adecuada', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'Plan de fertilizaci\xf3n seg\xfan la demanda del cultivo'), (2, 'Uso de Soluci\xf3n Arrancadora'), (3, 'Fertilizaci\xf3n diluida')], max_length=5, verbose_name='Fertilizaci\xf3n Adecuada')),
                ('densidad_siembra', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'Distanciamiento de planta adecuado'), (2, 'Densidad de planta adecuada')], max_length=3, verbose_name='Densidad de siembra correcta')),
                ('control_plagas_enfermedades', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'Muestreo de plagas de suelo al momento de la preparaci\xf3n del terreno'), (2, 'Control adecuado de plagas del suelo'), (3, 'Uso de insecticidas sist\xe9micos como preventivo'), (4, 'Uso de Agribon en cultivos que lo ameriten'), (5, 'Uso de Trampas amarillas o pegajosas'), (6, 'Eliminaci\xf3n de plantas enfermas'), (7, 'Poda sanitaria en cultivos que as\xed lo ameriten'), (8, 'Trampas olorosas'), (9, 'Uso de \xe1cido salic\xedlico o fosfonatos de potasio (Estimuladores de las defensas de la planta)'), (10, 'Eliminaci\xf3n de fruto da\xf1ado (gusanos, picudo)'), (11, 'Desinfecci\xf3n de estacas y mecates de amarres, si son reutilizados. En cultivos que necesiten tutoreo'), (12, 'Muestreo de plagas y enfermedades (AAE)'), (13, 'Uso de pl\xe1stico de cobertura en cultivos que lo amerite'), (14, 'Control manual de plagas (larvas o huevos)'), (15, 'Utilizaci\xf3n de equipos de protecci\xf3n para aplicaci\xf3n de plaguicidas'), (16, 'Utilizaci\xf3n de productos coadyugantes (adherente, dispersables, penetrantes)'), (17, 'Calibraci\xf3n del equipo de aplicaci\xf3n'), (18, 'Utilizaci\xf3n de productos biol\xf3gicos'), (19, 'Eliminaci\xf3n inmediata de rastrojo'), (20, 'Rotaci\xf3n de cultivo'), (21, 'Regulaci\xf3n de pH de agua para la aplicaci\xf3n de plaguicidas, con un rango de pH de 5.5-7')], max_length=53, verbose_name='Control de plagas y enfermedades')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': 'VII. Pr\xe1cticas MIP en la propiedad/finca',
            },
        ),
        migrations.CreateModel(
            name='Produccion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forma_colectivo', models.CharField(choices=[('Individual', 'Individual'), ('Asocio', 'Asocio')], max_length=50)),
                ('area_sembrada', models.FloatField(verbose_name='\xc1rea sembrada (Mz)')),
                ('area_cosechada', models.FloatField(verbose_name='\xc1rea cosechada (Mz)')),
                ('cantidad_cosechada', models.FloatField(verbose_name='Cantidad cosechada')),
                ('consumo', models.FloatField(verbose_name='Consumo de la familia')),
                ('procesamiento', models.FloatField()),
                ('venta', models.FloatField()),
                ('costo_produccion', models.FloatField(verbose_name='Costo producci\xf3n por Mz (Moneda local)')),
                ('costo_inversion', models.FloatField(verbose_name='Costo inversi\xf3n por Mz (Moneda local)')),
                ('cultivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Cultivo')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': 'Cultivo',
                'verbose_name_plural': '12. Indique producci\xf3n y destino de cada uno de los cultivos establecidos en la propiedad/finca',
            },
        ),
        migrations.CreateModel(
            name='Productor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='1. Nombre y apellido')),
                ('fecha_naciemiento', models.DateField(verbose_name='2. Fecha de nacimiento')),
                ('sexo', models.CharField(choices=[('Mujer', 'Mujer'), ('Hombre', 'Hombre')], max_length=5, verbose_name='3. Sexo')),
                ('anios_vinculacion', models.FloatField(verbose_name='6. A\xf1os de vinculaci\xf3n')),
                ('latitud', models.FloatField()),
                ('longitud', models.FloatField()),
                ('departamento', smart_selects.db_fields.ChainedForeignKey(chained_field='pais', chained_model_field='pais', on_delete=django.db.models.deletion.CASCADE, to='lugar.Departamento')),
                ('municipio', smart_selects.db_fields.ChainedForeignKey(chained_field='departamento', chained_model_field='departamento', on_delete=django.db.models.deletion.CASCADE, to='lugar.Municipio')),
                ('organizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizaciones.Organizacion', verbose_name='4. Organizaci\xf3n a la que pertenece')),
                ('pais', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lugar.Pais')),
            ],
            options={
                'verbose_name': 'Productor',
                'verbose_name_plural': 'Productores',
            },
        ),
        migrations.CreateModel(
            name='ProteccionFuentes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'Protecci\xf3n de fuentes y calidad de agua (pozos, r\xedos)',
                'verbose_name_plural': 'Protecci\xf3n de fuentes y calidad de agua (pozos, r\xedos)',
            },
        ),
        migrations.CreateModel(
            name='TipoCertificacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('Colectiva', 'Colectiva'), ('Individual', 'Individual')], max_length=50)),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '10.1_En el caso SI, indique si la certificaci\xf3n es',
                'verbose_name_plural': '10.1_En el caso SI, indique si la certificaci\xf3n es',
            },
        ),
        migrations.CreateModel(
            name='TipoSistemaRiego',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Tipo de sistema de riego',
                'verbose_name_plural': 'Tipos de sistemas de riego',
            },
        ),
        migrations.CreateModel(
            name='UsoEficienteAgua',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gestion_riesgo', models.IntegerField(choices=[(1, 'El uso del agua para producir est\xe1 optimizado'), (2, 'El uso del agua es m\xe1s eficiente con las medidas adoptadas'), (3, 'El uso de agua no es eficiente, pero han adoptados medidas'), (4, 'Uso ineficiente del agua sin medidas adoptadas')], verbose_name='20.1 Gesti\xf3n del riego')),
                ('retencion_agua', models.IntegerField(choices=[(1, 'No hay casos de agua de escorrent\xeda, tiene retenci\xf3n de agua'), (2, 'Algunos casos de la escorrent\xeda y con las medidas adoptadas'), (3, 'Casos frecuentes de escorrent\xeda sino se toman medidas'), (4, 'Casos frecuentes de escorrent\xeda sin medidas')], verbose_name='20.2 Retenci\xf3n de agua y la escorrent\xeda')),
                ('eficiencia_agua', models.IntegerField(choices=[(1, 'El uso del agua en comparaci\xf3n con la salida est\xe1 optimizado'), (2, 'El uso del agua es m\xe1s eficiente con las medidas adoptadas'), (3, 'El uso de agua no es eficiente, si no toman medidas'), (4, 'Uso ineficiente del agua sin medidas')], verbose_name='20.3 Eficiencia del Agua (aplicable para el procesamiento)')),
                ('contaminacion_agua', models.IntegerField(choices=[(1, 'M\xednima contaminaci\xf3n de cuerpos de agua naturales (probado con regularidad en la comunidad)'), (2, 'Pocos casos de contaminaci\xf3n y las medidas adoptadas para mejorar las condiciones'), (3, 'Casos frecuentes de contaminaci\xf3n, pero realizan pruebas del agua y toman medidas'), (4, 'Contaminaci\xf3n frecuente, sin agua y sin medidas para mejorar las condiciones')], verbose_name='20.4 Contaminaci\xf3n del agua')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': '20. El uso eficiente del agua y calidad del agua',
            },
        ),
        migrations.AddField(
            model_name='miembrosfamilia',
            name='productor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Productor'),
        ),
        migrations.AddField(
            model_name='encuesta',
            name='encuestador',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuestador'),
        ),
        migrations.AddField(
            model_name='encuesta',
            name='productor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Productor'),
        ),
        migrations.AddField(
            model_name='duenosi',
            name='productor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Productor'),
        ),
        migrations.AddField(
            model_name='duenopropiedad',
            name='productor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Productor'),
        ),
        migrations.AddField(
            model_name='duenono',
            name='productor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Productor'),
        ),
        migrations.AddField(
            model_name='distribucionfinca',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='destinoproduccion',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='conservacionsuelo',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='condicionesriegos',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='condicionesriegos',
            name='tipo_sistema_riego',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='productores.TipoSistemaRiego', verbose_name='17.1 \xbfTipo de sistema de riego posee?'),
        ),
        migrations.AddField(
            model_name='certificadoempresa',
            name='empresa',
            field=models.ManyToManyField(to='productores.EmpresaCertifica'),
        ),
        migrations.AddField(
            model_name='certificadoempresa',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='certificacion',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='cambioclimatico',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='bpa',
            name='elimincacion_focos',
            field=models.ManyToManyField(blank=True, to='productores.EliminacionFocos', verbose_name='1. Eliminaci\xf3n de focos de contaminaci\xf3n dentro y fuera del cultivo'),
        ),
        migrations.AddField(
            model_name='bpa',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='bpa',
            name='proteccion_fuentes',
            field=models.ManyToManyField(blank=True, to='productores.ProteccionFuentes', verbose_name='2. Protecci\xf3n de fuentes y calidad de agua (pozos, r\xedos)'),
        ),
        migrations.AddField(
            model_name='biodiversidad',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='areafinca',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
    ]
